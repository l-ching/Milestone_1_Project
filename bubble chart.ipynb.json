{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[33mWARNING: The directory '/home/jovyan/.cache/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.\u001b[0m\n",
      "\u001b[33mWARNING: The directory '/home/jovyan/.cache/pip' or its parent directory is not owned by the current user and caching wheels has been disabled. check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.\u001b[0m\n",
      "Requirement already satisfied: bubbly in /opt/conda/lib/python3.7/site-packages (1.0.2)\n",
      "Requirement already satisfied: plotly in /opt/conda/lib/python3.7/site-packages (from bubbly) (5.8.0)\n",
      "Requirement already satisfied: pandas in /opt/conda/lib/python3.7/site-packages (from bubbly) (0.25.0)\n",
      "Requirement already satisfied: tenacity>=6.2.0 in /opt/conda/lib/python3.7/site-packages (from plotly->bubbly) (8.0.1)\n",
      "Requirement already satisfied: pytz>=2017.2 in /opt/conda/lib/python3.7/site-packages (from pandas->bubbly) (2019.2)\n",
      "Requirement already satisfied: python-dateutil>=2.6.1 in /opt/conda/lib/python3.7/site-packages (from pandas->bubbly) (2.8.0)\n",
      "Requirement already satisfied: numpy>=1.13.3 in /opt/conda/lib/python3.7/site-packages (from pandas->bubbly) (1.17.0)\n",
      "Requirement already satisfied: six>=1.5 in /opt/conda/lib/python3.7/site-packages (from python-dateutil>=2.6.1->pandas->bubbly) (1.12.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install bubbly"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Crude Rate Lower 95% Confidence Interval</th>\n",
       "      <th>Crude Rate Upper 95% Confidence Interval</th>\n",
       "      <th>Deaths</th>\n",
       "      <th>Population</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Year</th>\n",
       "      <th>Cause of Death</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">1979.0</th>\n",
       "      <th>E900 (Excessive Heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>224635398.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.1 (Of man-made origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>224635398.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.9 (Of unspecified origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>79.0</td>\n",
       "      <td>224635398.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">1980.0</th>\n",
       "      <th>E900 (Excessive Heat)</th>\n",
       "      <td>0.3</td>\n",
       "      <td>0.3</td>\n",
       "      <td>651.0</td>\n",
       "      <td>226624371.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.1 (Of man-made origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>226624371.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.9 (Of unspecified origin)</th>\n",
       "      <td>0.4</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1027.0</td>\n",
       "      <td>226624371.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">1981.0</th>\n",
       "      <th>E900 (Excessive Heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>112.0</td>\n",
       "      <td>229487512.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.1 (Of man-made origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>229487512.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.9 (Of unspecified origin)</th>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>193.0</td>\n",
       "      <td>229487512.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">1982.0</th>\n",
       "      <th>E900 (Excessive Heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>231701425.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.1 (Of man-made origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>231701425.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.9 (Of unspecified origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>98.0</td>\n",
       "      <td>231701425.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">1983.0</th>\n",
       "      <th>E900 (Excessive Heat)</th>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>204.0</td>\n",
       "      <td>233781743.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.1 (Of man-made origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>233781743.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.9 (Of unspecified origin)</th>\n",
       "      <td>0.1</td>\n",
       "      <td>0.2</td>\n",
       "      <td>332.0</td>\n",
       "      <td>233781743.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">1984.0</th>\n",
       "      <th>E900 (Excessive Heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>93.0</td>\n",
       "      <td>235922142.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.1 (Of man-made origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>235922142.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.9 (Of unspecified origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>121.0</td>\n",
       "      <td>235922142.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">1985.0</th>\n",
       "      <th>E900 (Excessive Heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>113.0</td>\n",
       "      <td>238005715.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.1 (Of man-made origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>238005715.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.9 (Of unspecified origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>99.0</td>\n",
       "      <td>238005715.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">1986.0</th>\n",
       "      <th>E900 (Excessive Heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>137.0</td>\n",
       "      <td>240189882.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.1 (Of man-made origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>240189882.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.9 (Of unspecified origin)</th>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>205.0</td>\n",
       "      <td>240189882.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">1987.0</th>\n",
       "      <th>E900 (Excessive Heat)</th>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>151.0</td>\n",
       "      <td>242395034.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.1 (Of man-made origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>242395034.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.9 (Of unspecified origin)</th>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>167.0</td>\n",
       "      <td>242395034.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">1988.0</th>\n",
       "      <th>E900 (Excessive Heat)</th>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>210.0</td>\n",
       "      <td>244651961.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.1 (Of man-made origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>244651961.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.9 (Of unspecified origin)</th>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>229.0</td>\n",
       "      <td>244651961.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">1995.0</th>\n",
       "      <th>E900 (Excessive Heat)</th>\n",
       "      <td>0.1</td>\n",
       "      <td>0.2</td>\n",
       "      <td>364.0</td>\n",
       "      <td>266386596.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.1 (Of man-made origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>266386596.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.9 (Of unspecified origin)</th>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>322.0</td>\n",
       "      <td>266386596.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">1996.0</th>\n",
       "      <th>E900 (Excessive Heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>122.0</td>\n",
       "      <td>269540779.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.1 (Of man-made origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>269540779.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.9 (Of unspecified origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>111.0</td>\n",
       "      <td>269540779.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">1997.0</th>\n",
       "      <th>E900 (Excessive Heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>96.0</td>\n",
       "      <td>272776678.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.1 (Of man-made origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>272776678.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.9 (Of unspecified origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>76.0</td>\n",
       "      <td>272776678.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">1998.0</th>\n",
       "      <th>E900 (Excessive Heat)</th>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>225.0</td>\n",
       "      <td>276032848.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.1 (Of man-made origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>276032848.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E900.9 (Of unspecified origin)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>126.0</td>\n",
       "      <td>276032848.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1999.0</th>\n",
       "      <th>X30 (Exposure to excessive natural heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>594.0</td>\n",
       "      <td>279040168.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2000.0</th>\n",
       "      <th>X30 (Exposure to excessive natural heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>301.0</td>\n",
       "      <td>281421906.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2001.0</th>\n",
       "      <th>X30 (Exposure to excessive natural heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>284968955.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2002.0</th>\n",
       "      <th>X30 (Exposure to excessive natural heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>350.0</td>\n",
       "      <td>287625193.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2003.0</th>\n",
       "      <th>X30 (Exposure to excessive natural heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>273.0</td>\n",
       "      <td>290107933.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004.0</th>\n",
       "      <th>X30 (Exposure to excessive natural heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>226.0</td>\n",
       "      <td>292805298.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005.0</th>\n",
       "      <th>X30 (Exposure to excessive natural heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>466.0</td>\n",
       "      <td>295516599.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2006.0</th>\n",
       "      <th>X30 (Exposure to excessive natural heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>622.0</td>\n",
       "      <td>298379912.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2007.0</th>\n",
       "      <th>X30 (Exposure to excessive natural heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>309.0</td>\n",
       "      <td>301231207.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2008.0</th>\n",
       "      <th>X30 (Exposure to excessive natural heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>296.0</td>\n",
       "      <td>304093966.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2009.0</th>\n",
       "      <th>X30 (Exposure to excessive natural heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>352.0</td>\n",
       "      <td>306771529.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2010.0</th>\n",
       "      <th>X30 (Exposure to excessive natural heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>474.0</td>\n",
       "      <td>308745538.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011.0</th>\n",
       "      <th>X30 (Exposure to excessive natural heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>587.0</td>\n",
       "      <td>311591917.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2012.0</th>\n",
       "      <th>X30 (Exposure to excessive natural heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>474.0</td>\n",
       "      <td>313914040.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013.0</th>\n",
       "      <th>X30 (Exposure to excessive natural heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>372.0</td>\n",
       "      <td>316128839.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014.0</th>\n",
       "      <th>X30 (Exposure to excessive natural heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>244.0</td>\n",
       "      <td>318857056.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015.0</th>\n",
       "      <th>X30 (Exposure to excessive natural heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>339.0</td>\n",
       "      <td>321418820.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016.0</th>\n",
       "      <th>X30 (Exposure to excessive natural heat)</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>458.0</td>\n",
       "      <td>323127513.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>78 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                 Crude Rate Lower 95% Confidence Interval  \\\n",
       "Year   Cause of Death                                                                       \n",
       "1979.0 E900 (Excessive Heat)                                                          0.0   \n",
       "       E900.1 (Of man-made origin)                                                    0.0   \n",
       "       E900.9 (Of unspecified origin)                                                 0.0   \n",
       "1980.0 E900 (Excessive Heat)                                                          0.3   \n",
       "       E900.1 (Of man-made origin)                                                    0.0   \n",
       "...                                                                                   ...   \n",
       "2012.0 X30 (Exposure to excessive natural heat)                                       0.0   \n",
       "2013.0 X30 (Exposure to excessive natural heat)                                       0.0   \n",
       "2014.0 X30 (Exposure to excessive natural heat)                                       0.0   \n",
       "2015.0 X30 (Exposure to excessive natural heat)                                       0.0   \n",
       "2016.0 X30 (Exposure to excessive natural heat)                                       0.0   \n",
       "\n",
       "                                                 Crude Rate Upper 95% Confidence Interval  \\\n",
       "Year   Cause of Death                                                                       \n",
       "1979.0 E900 (Excessive Heat)                                                          0.0   \n",
       "       E900.1 (Of man-made origin)                                                    0.0   \n",
       "       E900.9 (Of unspecified origin)                                                 0.0   \n",
       "1980.0 E900 (Excessive Heat)                                                          0.3   \n",
       "       E900.1 (Of man-made origin)                                                    0.0   \n",
       "...                                                                                   ...   \n",
       "2012.0 X30 (Exposure to excessive natural heat)                                       0.0   \n",
       "2013.0 X30 (Exposure to excessive natural heat)                                       0.0   \n",
       "2014.0 X30 (Exposure to excessive natural heat)                                       0.0   \n",
       "2015.0 X30 (Exposure to excessive natural heat)                                       0.0   \n",
       "2016.0 X30 (Exposure to excessive natural heat)                                       0.0   \n",
       "\n",
       "                                                 Deaths   Population  \n",
       "Year   Cause of Death                                                 \n",
       "1979.0 E900 (Excessive Heat)                       54.0  224635398.0  \n",
       "       E900.1 (Of man-made origin)                 15.0  224635398.0  \n",
       "       E900.9 (Of unspecified origin)              79.0  224635398.0  \n",
       "1980.0 E900 (Excessive Heat)                      651.0  226624371.0  \n",
       "       E900.1 (Of man-made origin)                 22.0  226624371.0  \n",
       "...                                                 ...          ...  \n",
       "2012.0 X30 (Exposure to excessive natural heat)   474.0  313914040.0  \n",
       "2013.0 X30 (Exposure to excessive natural heat)   372.0  316128839.0  \n",
       "2014.0 X30 (Exposure to excessive natural heat)   244.0  318857056.0  \n",
       "2015.0 X30 (Exposure to excessive natural heat)   339.0  321418820.0  \n",
       "2016.0 X30 (Exposure to excessive natural heat)   458.0  323127513.0  \n",
       "\n",
       "[78 rows x 4 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "e900_0 = pd.read_csv('E900.0_1979-1998.txt', sep='\\t').drop(columns = ['Notes', 'Year Code']).dropna()\n",
    "e900_1 = pd.read_csv('E900.1_1979-1998.txt', sep='\\t').drop(columns = ['Notes', 'Year Code']).dropna()\n",
    "e900_9 = pd.read_csv('E900.9_1979-1998.txt', sep ='\\t').drop(columns = ['Notes', 'Year Code']).dropna()\n",
    "x30 = pd.read_csv('x30_1999-2016.txt', sep=\"\\t\").drop(columns = ['Notes', 'Year Code']).dropna()\n",
    "\n",
    "e900_0['Cause of Death'] = 'E900 (Excessive Heat)'\n",
    "e900_1['Cause of Death'] = 'E900.1 (Of man-made origin)'\n",
    "e900_9['Cause of Death'] = 'E900.9 (Of unspecified origin)'\n",
    "x30['Cause of Death'] = 'X30 (Exposure to excessive natural heat)'\n",
    "\n",
    "all_cdc = [e900_0, e900_1, e900_9, x30]\n",
    "all_deaths = pd.concat(all_cdc).groupby(['Year', 'Cause of Death']).sum()\n",
    "all_deaths"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "np.random.seed(42)\n",
    "N = 100\n",
    "x = np.random.normal(170, 20, N)\n",
    "y = x + np.random.normal(5, 25, N)\n",
    "colors = np.random.rand(N)\n",
    "area = (25 * np.random.rand(N))**2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "city_temperature = pd.DataFrame({\n",
    "    'Year': x,\n",
    "    'Temperature': y,\n",
    "    'Colors': colors,\n",
    "    \"bubble_size\":area})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "def createcity_temperature(city_temperature='592/city_temperature.csv'):\n",
    "    df=pd.read_csv(city_temperature.csv)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'df' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-9-60e292025a8e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscatter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Year'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Temperature'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mxlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Year\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m16\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mylabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Temperature\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m16\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mNameError\u001b[0m: name 'df' is not defined"
     ]
    }
   ],
   "source": [
    "plt.scatter('Year', 'Temperature', data=df)\n",
    "plt.xlabel(\"Year\", size=16)\n",
    "plt.ylabel(\"Temperature\", size=16)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Heat Related Mortality Over Time with the Inclusion of Temperature')"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter('Year', 'Temperature', \n",
    "             s='bubble_size',\n",
    "             alpha=0.5, \n",
    "             data=city_temperature)\n",
    "plt.xlabel(\"Year\", size=16)\n",
    "plt.ylabel(\"Temperature\", size=16)\n",
    "plt.title(\"Heat Related Mortality Over Time with the Inclusion of Temperature\", size=18)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'df' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-13-b572b611500a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      2\u001b[0m              \u001b[0ms\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'bubble_size'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m              \u001b[0mc\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'Colors'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m              alpha=0.5, data=df)\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mxlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Year\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m16\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mylabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Temperature\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m16\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mNameError\u001b[0m: name 'df' is not defined"
     ]
    }
   ],
   "source": [
    "plt.scatter('Year', 'Temperature',\n",
    "             s='bubble_size',\n",
    "             c='Colors',\n",
    "             alpha=0.5, data=df)\n",
    "plt.xlabel(\"Year\", size=16)\n",
    "plt.ylabel(\"Temperature\", size=16)\n",
    "plt.title(\"Heat Related Mortality Over Time with the Inclusion of Temperature\", size=18)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A circle plot where the x-axis is the year, the y-axis is the temperature, \n",
    "and the size of the circle is the heat mortality rate. This will demonstrate changes in heat related mortality over time with the inclusion of temperature. "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
